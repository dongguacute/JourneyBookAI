name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  build-and-release:
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0
          
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: List installed packages (debug)
        run: pnpm list
        
      - name: Verify electron-builder installation
        run: pnpm electron-builder --help || echo "electron-builder not found"
        
      - name: Build application (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "Building for Linux..."
          pnpm run build:linux
        env:
          DEBUG: electron-builder
          
      - name: Build application (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "Building for Windows..."
          pnpm run build:win
        env:
          DEBUG: electron-builder
          
      - name: Build application (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          echo "Building for macOS..."
          pnpm run build:mac
        env:
          DEBUG: electron-builder
          
      - name: List build output (debug)
        shell: bash
        run: |
          echo "Listing dist directory:"
          ls -la dist/ || echo "dist directory not found"
          find . -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.deb" 2>/dev/null || echo "No build artifacts found"
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/**/*
            !dist/**/node_modules/**
          retention-days: 30
          if-no-files-found: warn
          
  release:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: List downloaded artifacts
        shell: bash
        run: ls -la ./artifacts
        
      - name: List dist directory
        shell: bash
        run: ls -la dist/ || echo "dist directory not found"

      - name: Get commit count as version
        id: get_commit_count
        run: echo "COMMITS=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT
        
      - name: Create Release and Upload Assets
        run: |
          gh release create v1.0.${{ steps.get_commit_count.outputs.COMMITS }} \
            --title "Release v1.0.${{ steps.get_commit_count.outputs.COMMITS }}" \
            --notes "Auto-generated release for JourneyBookAI" \
            ./artifacts/**/*.{exe,dmg,AppImage,deb}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}